#

.deploy_stage: &deploy_stage
  stage: "Deploy"
  dependencies: []
  services:
    - docker:dind
  variables: &deploy_stage_variables
    IMAGE_TAG: $CI_COMMIT_SHA

.incubateur_stage: &incubateur_stage
  environment:
    name: incubateur
  only:
    refs:
      - triggers
    variables:
      - $PRODUCTION


.dev_stage: &dev_stage
  environment:
    name: dev.factory
  only:
    - branches
  except:
    variables:
      - $PRODUCTION

#
#
#

.k8s-frontend-depoyment:
  extends: .base_docker_kube_image_stage
  script:
    #
    - envsubst < ./.k8s/frontend/deployment.yml > ./deployment.yml
    - envsubst < ./.k8s/frontend/service.yml > ./service.yml
    - envsubst < ./.k8s/frontend/ingress${SUFFIX}.yml > ./ingress.yml
    #
    - kubectl apply -f ./deployment.yml
    - kubectl apply -f ./service.yml
    - kubectl apply -f ./ingress.yml
    #
    - echo "frontend available at - ${FRONTEND_HOST}"

.deploy-frontend: &deploy_frontend
  <<: *deploy_stage
  extends: .k8s-frontend-depoyment
  variables:
    <<: *deploy_stage_variables
    CONTEXT: frontend
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}/frontend
    PORT: 80

#

Deploy App (dev):
  <<: *deploy_frontend
  <<: *dev_stage

Deploy App (incubateur):
  <<: *deploy_frontend
  <<: *incubateur_stage

#
#
#

.k8s-certificate-depoyment:
  extends: .base_docker_kube_image_stage
  script:
    #
    - envsubst < ./.k8s/certificate/certificate.yml > ./certificate.yml
    #
    - kubectl apply -f ./certificate.yml

.deploy-certificate: &deploy_certificate
  <<: *deploy_stage
  extends: .k8s-certificate-depoyment

#

Deploy Certificate (incubateur):
  <<: *deploy_certificate
  <<: *incubateur_stage

#
#
#
